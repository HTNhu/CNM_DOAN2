type Member {
    userId: ID!
    name: String!
    phone: String!
    address: String
    username: String!
    password: String
    createdAt: String
    updatedAt: String
}

input MemberInput {
    name: String!
    phone: String!
    address: String
    username: String!
    password: String
}

type MemberResSchedule {
    userId: String
    name: String!
    phone: String!
}
type Query {
    getAllMember: [MemberResSchedule]
    getMemberByUsername(username: String): Member
}
type Mutation {
  createMember(memInput: MemberInput): Boolean
}